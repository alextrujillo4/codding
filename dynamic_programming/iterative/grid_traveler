
// By Memoizing we can just pass from a exponencial to a lineat time complexity.
var iGridTraveler = (m,n) => {
    const table = Array(m+1)
    .fill()
    .map(() => Array(n+1).fill(0));

    table[1][1] = 1

    for (let i = 0; i <= m; i++) {
        for (let j = 0; j <= n; j++) {
            const element = table[i][j];
            if(j+1 <= n) table[i][j+1] += element;
            if(i+1 <= m) table[i+1][j] += element;
              
        }
    
    }
    return table[m][n]
}

console.log(iGridTraveler(1,1))
console.log(iGridTraveler(1,3))
console.log(iGridTraveler(3,2))
console.log(iGridTraveler(3,3))
console.log(iGridTraveler(18,18))
module.exports = iGridTraveler;
